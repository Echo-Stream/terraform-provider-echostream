fragment AppFields on App {
    description
    name
}

fragment CognitoCredentialsFields on CognitoCredentials {
    clientId
    password
    userPoolId
    username
}

fragment CrossAccountAppFields on CrossAccountApp {
    account
    appsyncEndpoint
    auditRecordsEndpoint
    config
    credentials {
        ...CognitoCredentialsFields
    }
    iamPolicy
    tableAccess
}

fragment CrossTenantReceivingAppFields on CrossTenantReceivingApp {
    sendingApp
    sendingTenant
}

fragment CrossTenantSendingAppFields on CrossTenantSendingApp {
    receivingApp
    receivingTenant
}

fragment ExternalAppFields on ExternalApp {
    appsyncEndpoint
    auditRecordsEndpoint
    config
    credentials {
        ...CognitoCredentialsFields
    }
    tableAccess
}

fragment ManagedAppFields on ManagedApp {
    auditRecordsEndpoint
    config
    credentials {
        ...CognitoCredentialsFields
    }
    tableAccess
}

mutation CreateCrossAccountApp(
    $account: String!,
    $name: String!,
    $tenant: String!,
    $config: AWSJSON,
    $description: String,
    $tableAccess: Boolean
) {
    CreateCrossAccountApp(
        account: $account,
        name: $name,
        tenant: $tenant,
        config: $config,
        description: $description,
        tableAccess: $tableAccess
    ) {
        ...AppFields
        ...CrossAccountAppFields
    }
}

mutation CreateCrossTenantReceivingApp(
    $name: String!,
    $sendingTenant: String!,
    $tenant: String!
) {
    CreateCrossTenantReceivingApp(name: $name, sendingTenant: $sendingTenant, tenant: $tenant) {
        ...AppFields
        ...CrossTenantReceivingAppFields
    }
}

mutation CreateCrossTenantSendingApp(
    $name: String!,
    $receivingApp: String!,
    $receivingTenant: String!,
    $tenant: String!
) {
    CreateCrossTenantSendingApp(
        name: $name,
        receivingApp: $receivingApp,
        receivingTenant: $receivingTenant,
        tenant: $tenant
    ) {
        ...AppFields
        ...CrossTenantSendingAppFields
    }
}

mutation CreateExternalApp(
    $name: String!,
    $tenant: String!,
    $config: AWSJSON,
    $description: String,
    $tableAccess: Boolean
) {
    CreateExternalApp(
        name: $name,
        tenant: $tenant,
        config: $config,
        description: $description,
        tableAccess: $tableAccess
    ) {
        ...AppFields
        ...ExternalAppFields
    }
}

mutation CreateManagedApp(
    $name: String!,
    $tenant: String!,
    $config: AWSJSON,
    $description: String,
    $tableAccess: Boolean
) {
    CreateManagedApp(
        name: $name,
        tenant: $tenant,
        config: $config,
        description: $description,
        tableAccess: $tableAccess
    ) {
        ...AppFields
        ...ManagedAppFields
    }
}

query DeleteApp($name: String!, $tenant: String!) {
    GetApp(name: $name, tenant: $tenant) {
        Delete(drainEdges: true)
    }
}

query ReadApp($name: String!, $tenant: String!) {
    GetApp(name: $name, tenant: $tenant) {
        ...AppFields
        ... on CrossAccountApp {
            ...CrossAccountAppFields
        }
        ... on CrossTenantReceivingApp {
            ...CrossTenantReceivingAppFields
        }
        ... on CrossTenantSendingApp {
            ...CrossTenantSendingAppFields
        }
        ... on ExternalApp {
            ...ExternalAppFields
        }
        ... on ManagedApp {
            ...ManagedAppFields
        }
    }
}

query ReadManagedAppIso($name: String!, $tenant: String!) {
    GetApp(name: $name, tenant: $tenant) {
        ... on ManagedApp {
            iso
        }
    }
}

query ReadManagedAppUserdata($name: String!, $tenant: String!) {
    GetApp(name: $name, tenant: $tenant) {
        ... on ManagedApp {
            userdata
        }
    }
}

query UpdateCrossTenantApp(
    $name: String!,
    $tenant: String!
    $description: String,
) {
    GetApp(name: $name, tenant: $tenant) {
        ... on CrossTenantReceivingApp {
            Update(
                description: $description
            ) {
                ...AppFields
                ...CrossTenantReceivingAppFields
            }
        }
        ... on CrossTenantSendingApp {
            Update(
                description: $description
            ) {
                ...AppFields
                ...CrossTenantSendingAppFields
            }
        }
    }
}

query UpdateRemotetApp(
    $name: String!,
    $tenant: String!
    $config: AWSJSON,
    $description: String,
    $tableAccess: Boolean
) {
    GetApp(name: $name, tenant: $tenant) {
        ... on CrossAccountApp {
            Update(
                config: $config,
                description: $description,
                tableAccess: $tableAccess
            ) {
                ...AppFields
                ...CrossAccountAppFields
            }
        }
        ... on ExternalApp {
            Update(
                config: $config,
                description: $description,
                tableAccess: $tableAccess
            ) {
                ...AppFields
                ...ExternalAppFields
            }
        }
        ... on ManagedApp {
            Update(
                config: $config,
                description: $description,
                tableAccess: $tableAccess
            ) {
                ...AppFields
                ...ManagedAppFields
            }
        }
    }
}
